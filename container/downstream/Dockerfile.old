FROM bioconductor/bioconductor_docker:RELEASE_3_12
# bioconductor/bioconductor_docker:RELEASE_3_12 is FROM rocker/rstudio:4.0.3 
# (i.e. 2 stages before the rocker image with tex - rocker/verse) 

#install some more build tools and libs
RUN apt-get update && apt-get install -y --no-install-recommends --no-install-suggests \ 
  software-properties-common \
  git \
  vim \
  libgomp1 \
  zlib1g-dev \
  libstdc++6 \
  sudo \
  build-essential \
  libssl-dev \
  libcurl4-openssl-dev \
  gnupg2 \
  python-dev \
  python3-dev \
  libxml2-dev \
  libxslt-dev &&\
  rm -rf /var/lib/apt/lists/*

#setup R configs
RUN Rscript -e "install.packages('Rcpp')"

RUN Rscript -e "install.packages('tidyverse')"
RUN Rscript -e "install.packages('dplyr')"
RUN Rscript -e "install.packages('tibble')"
RUN Rscript -e "install.packages('tidyr')"
RUN Rscript -e "install.packages('data.table')"

RUN Rscript -e "install.packages('RColorBrewer')"
RUN Rscript -e "install.packages('heatmap3')"
RUN Rscript -e "install.packages('ggplot2')"
RUN Rscript -e "install.packages('graphics')"
RUN Rscript -e "install.packages('cowplot')"
RUN Rscript -e "install.packages('ggrepel')"
RUN Rscript -e "install.packages('lubridate')"
RUN Rscript -e "install.packages('chron')"
RUN Rscript -e "install.packages('scales')"
RUN Rscript -e "install.packages('grid')"
RUN Rscript -e "install.packages('gridExtra')"

RUN Rscript -e "install.packages('devtools')"
RUN Rscript -e "remotes::install_github('twitter/AnomalyDetection')"
RUN Rscript -e "BiocManager::install('MSstats')"
RUN Rscript -e "install.packages('optparse')"

RUN Rscript -e "install.packages('qcc')"
RUN Rscript -e "install.packages('ggQC')"
RUN Rscript -e "install.packages('MSQC')"
RUN Rscript -e "install.packages('IQCC')"
RUN Rscript -e "install.packages('yhatr')"
RUN Rscript -e "install.packages('pracma')"
RUN Rscript -e "install.packages('anomalize')"
RUN Rscript -e "install.packages('DMwR')"
RUN Rscript -e "install.packages('outliers')"

RUN Rscript -e "install.packages('plotly')"
RUN Rscript -e "install.packages('htmlwidgets')"
RUN Rscript -e "install.packages('tinytex')"

#RUN Rscript -e "tinytex::install_tinytex(version = '2020.11')"
RUN wget -qO- \
    "https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh" | \
    sh -s - --admin --no-path \
  && mv ~/.TinyTeX /opt/TinyTeX \
  && if /opt/TinyTeX/bin/*/tex -v | grep -q 'TeX Live 2018'; then \
      ## Patch the Perl modules in the frozen TeX Live 2018 snapshot with the newer
      ## version available for the installer in tlnet/tlpkg/TeXLive, to include the
      ## fix described in https://github.com/yihui/tinytex/issues/77#issuecomment-466584510
      ## as discussed in https://www.preining.info/blog/2019/09/tex-services-at-texlive-info/#comments
      wget -P /tmp/ ${CTAN_REPO}/install-tl-unx.tar.gz \
      && tar -xzf /tmp/install-tl-unx.tar.gz -C /tmp/ \
      && cp -Tr /tmp/install-tl-*/tlpkg/TeXLive /opt/TinyTeX/tlpkg/TeXLive \
      && rm -r /tmp/install-tl-*; \
    fi \
  && /opt/TinyTeX/bin/*/tlmgr path add \
  && tlmgr install ae inconsolata listings metafont mfware parskip pdfcrop tex \
  && tlmgr path add \
  && Rscript -e "tinytex::r_texmf()" \
  && chown -R root:staff /opt/TinyTeX \
  && chmod -R g+w /opt/TinyTeX \
  && chmod -R g+wx /opt/TinyTeX/bin \
  && echo "PATH=${PATH}" >> /usr/local/lib/R/etc/Renviron
RUN Rscript -e "install.packages('tinytex')"

RUN pip3 install pip --upgrade
RUN pip3 install setuptools --upgrade
RUN pip3 install --force-reinstall 'pytest<=5.0.1'
RUN pip3 install numpy pandas mypy pronto pytest jupyter rpy2 biopython flask

COPY OpenSWATHtoMSstatsFormat.R /scripts/OpenSWATHtoMSstatsFormat.R
COPY SWATHDIA_postprocess.R /scripts/SWATHDIA_postprocess.R 
COPY diamsstats_qc.rmd /scripts/diamsstats_qc.rmd 
